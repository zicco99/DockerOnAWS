name: AWS CDK Action

on:
  push:
    branches:
      main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-west-1
      NODE_VERSION: '20.9.0'
      PYTHON_VERSION: '3.10'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Print directory contents
        run: ls -la

      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ~/.cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/*.json') }}

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/*.lock') }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update AWS CDK
        run: sudo npm install -g aws-cdk@latest

      - name: Install CDK dependencies and Python requirements
        run: |
          npm install -g aws-cdk
          python3 -m pip install -r requirements.txt

      - name: Bootstrap and synthesize CDK app
        run: |
          mkdir -p cdk.out
          cdk bootstrap
          cdk synth --app="python3 app.py" --output=cdk.out

      - name: Deploy to AWS
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: cdk deploy --app="cdk.out" --require-approval=never --all --outputs-file=./cdk_outputs.json

      - name: Build and Push Docker image
        run: |
          cd microservice
          docker build -t microservice -f Dockerfile .
          DOCKER_REPOSITORY_URI=$(jq -r .AppStack.DockerRepositoryUri < ../cdk_outputs.json)
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REPOSITORY_URI
          docker tag microservice $DOCKER_REPOSITORY_URI
          docker push $DOCKER_REPOSITORY_URI


      #- name: Destroy stack
      #  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #  run: cdk destroy --app="cdk.out" --force --all